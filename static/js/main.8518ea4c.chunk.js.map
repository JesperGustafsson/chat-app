{"version":3,"sources":["styles.js","App.js","App2.js","index.js"],"names":["Container","styled","div","Header","Message","Sent","Messages","Form","form","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","analytics","onClick","provider","GoogleAuthProvider","signInWithPopup","FacebookAuthProvider","signInAnonymously","ChatRoom","dummy","useRef","console","log","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","ref","map","msg","message","id","onSubmit","value","onChange","target","type","disabled","ChatMessage","props","SignOut","signOut","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAGaA,EAAYC,IAAOC,IAAV,uKAWTC,EAASF,IAAOC,IAAV,2DAINE,EAAUH,IAAOC,IAAV,iPAWPG,EAAOJ,IAAOC,IAAV,gPAYJI,EAAWL,IAAOC,IAAV,2JAQRK,EAAON,IAAOO,KAAV,8C,OCpChBC,IAASC,KAAKC,OASVF,IAASG,MATUH,IAASI,cAAc,CAE7CC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAGjB,IAAMC,EAAOZ,IAASY,OAChBC,EAAYb,IAASa,YAsBrBC,GArBYd,IAASe,YAqBZ,WAeX,OACJ,4CAAM,wBAAQC,QAda,WACvB,IAAMC,EAAW,IAAIjB,IAASY,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAYnB,iCACA,wBAAQD,QAVe,WACzB,IAAMC,EAAW,IAAIjB,IAASY,KAAKQ,qBACnCR,EAAKO,gBAAgBF,IAQnB,mCACA,wBAAQD,QANgB,WAC1BhB,IAASY,OAAOS,qBAKd,sCAMAC,EAAW,WACf,IAAMC,EAAQC,mBACdC,QAAQC,IAAI,MAAOH,GAInB,IAAMI,EAAcd,EAAUe,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,YAAa,QAAQC,MAAM,IAPxC,EASFC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EATc,sBAWaC,mBAAS,IAXtB,mBAWdC,EAXc,KAWHC,EAXG,KAarBZ,QAAQC,IAAIQ,GAEZ,IAAMI,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBAEFhB,QAAQC,IAAI,gBAHM,EAKQd,EAAK8B,YAAvBC,EALU,EAKVA,IAAKC,EALK,EAKLA,SALK,SAOZjB,EAAYkB,IAAI,CACpBC,KAAMV,EACNW,UAAW/C,IAASa,UAAUmC,WAAWC,kBACzCN,MACAC,aAXgB,OAclBP,EAAa,IAGbd,EAAM2B,QAAQC,eAAe,CAAEC,SAAU,WAjBvB,2CAAH,sDAqBjB,OACA,qCAIA,eAACvD,EAAD,WACA,sBAAMwD,IAAK9B,IACRW,GAAYA,EAASoB,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAA0BC,QAASD,GAAjBA,EAAIE,UAIzD,8BACE,eAAC3D,EAAD,CAAM4D,SAAYpB,EAAlB,UACE,uBAAOqB,MAASvB,EAAWwB,SAAW,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,UACnE,wBAAQG,KAAM,SAASC,UAAW3B,EAAlC,gCAGJ,8BACE,cAAC,EAAD,UAME4B,EAAc,SAACC,GAAW,IAAD,EACPA,EAAMT,QAApBV,EADqB,EACrBA,KAIR,OAL6B,EACfH,MAEO/B,EAAK8B,YAAYC,IAG7B,cAAChD,EAAD,UAAUmD,IAAkB,cAAClD,EAAD,UAAOkD,KAIxCoB,EAAU,WACd,OACE,wBAAQlD,QAAS,SAACuB,GAAD,OAAO3B,EAAKuD,WAA7B,0BAIWC,EAvHH,WAAO,IAAD,EAEDC,YAAazD,GAArB0D,EAFS,oBAKhB,OACE,mCAEA,eAAC/E,EAAD,WACE,cAACG,EAAD,6CAGE4E,EAAO,cAAC,EAAD,CAAUb,GAAG,YAAe,cAAC,EAAD,UC9B1CzD,IAASC,KAAKC,OASVF,IAASG,MATUH,IAASI,cAAc,CAE7CC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAGJX,IAASY,OACJZ,IAASa,YACTb,IAASe,YClB3BwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8518ea4c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n\nexport const Container = styled.div`\n    background-color: #333333;\n\n    border: solid;\n    border-radius: 2px;\n    width: 400px;\n    height: 600px;\n    margin: auto;\n\n`;\n\nexport const Header = styled.div`\n    background-color: #666666\n`;\n\nexport const Message = styled.div`\n    background-color: #559955;\n    max-width: 400px;\n    word-break: break-all;\n    margin-top: 0.125em;\n    margin-bottom: 0.125em;\n    padding: 0.50em 1em;\n    border-radius: 15px;\n    margin-left: 25%;\n`;\n\nexport const Sent = styled.div`\n    background-color: #555599;\n    max-width: 400px;\n    word-break: break-all;\n    margin-top: 0.125em;\n    margin-bottom: 0.125em;\n    padding: 0.50em;\n    border-radius: 15px;\n    margin-right: 25%;\n\n`;\n\nexport const Messages = styled.div`\n    overflow-y: scroll;\n    height: 500px;\n    display: flex;\n    flex-direction: column-reverse;\n    padding: 0.5em 1em;\n`;\n\nexport const Form = styled.form`\n    width: 100%;\n`;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\nimport { useState, useRef } from 'react';\n\nimport { Container, Header, Message, Form, Messages, Sent } from './styles'\n\n//import React from 'react'\n\n!firebase.apps.length ? firebase.initializeApp({\n  //your config\n  apiKey: \"AIzaSyDxvOgQi_rEneoxRi9Iag75b-Oy-vLbCaI\",\n  authDomain: \"chat-app-18404.firebaseapp.com\",\n  projectId: \"chat-app-18404\",\n  storageBucket: \"chat-app-18404.appspot.com\",\n  messagingSenderId: \"1020225808869\",\n  appId: \"1:1020225808869:web:fc9b3c705cde795d54e70c\",\n  measurementId: \"G-7EXTG0ETER\"\n}) : firebase.app();\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nconst App = () => {\n\n  const [user] = useAuthState(auth);\n\n\n  return (\n    <>\n      \n    <Container>\n      <Header>\n        This is an anonymous chatroom!\n      </Header>\n      { user ? <ChatRoom id=\"chatbox\" /> : <SignIn /> }\n    </Container>\n\n    </>\n  )\n}\n\nconst SignIn = () => {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  const signInWithFacebook = () => {\n    const provider = new firebase.auth.FacebookAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  const signInWithAnonymous = () => {\n    firebase.auth().signInAnonymously();\n  }\n    return (\n<>    <button onClick={signInWithGoogle}>Sign in with Google</button>\n      <button onClick={signInWithFacebook}>Sign in with Facebook</button>\n      <button onClick={signInWithAnonymous}>Sign in Anonymously</button>\n</>\n    )\n}\n\n\nconst ChatRoom = () => {\n  const dummy = useRef();\n  console.log(\"ref\", dummy)\n  //dummy.current ? dummy.current.scrollIntoView({ behavior: 'smooth' }) : console.log(\"hmm\");\n\n\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt', 'desc').limit(25);\n\n  const [messages] = useCollectionData(query, {idField: 'id'})\n\n  const [formValue, setFormValue] = useState(\"\")\n\n  console.log(messages);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    console.log(\"sendmessage!\")\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n\n    \n    dummy.current.scrollIntoView({ behavior: 'smooth'});\n\n  }\n\n  return (\n  <>\n\n  \n\n  <Messages>\n  <span ref={dummy}></span>\n    {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\n    {/* {dummy.current && console.log(\"dummref\", dummy) && dummy.current.scrollIntoView({ behavior: 'smooth' })}; */}\n\n  </Messages>\n  <div>\n    <Form onSubmit = {sendMessage}>\n      <input value = {formValue} onChange= {(e) => setFormValue(e.target.value)}></input>\n      <button type =\"submit\" disabled={!formValue}>SEND MESSAGE!</button>\n    </Form>\n  </div>\n  <div>\n    <SignOut />\n  </div>\n  </>)\n}\n\n\nconst ChatMessage = (props) => {\n  const { text, uid } = props.message;\n\n  const sent = uid === auth.currentUser.uid ? true : false;\n\n  return (\n    sent ? <Message>{text}</Message> : <Sent>{text}</Sent>\n  )\n}\n\nconst SignOut = () => {\n  return (\n    <button onClick={(e) => auth.signOut()}>Sign Out!!!</button>\n  ) \n}\n\nexport default App","import React, { useRef, useState } from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\n!firebase.apps.length ? firebase.initializeApp({\n  //your config\n  apiKey: \"AIzaSyDxvOgQi_rEneoxRi9Iag75b-Oy-vLbCaI\",\n  authDomain: \"chat-app-18404.firebaseapp.com\",\n  projectId: \"chat-app-18404\",\n  storageBucket: \"chat-app-18404.appspot.com\",\n  messagingSenderId: \"1020225808869\",\n  appId: \"1:1020225808869:web:fc9b3c705cde795d54e70c\",\n  measurementId: \"G-7EXTG0ETER\"\n}) : firebase.app();\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nfunction App2() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>‚öõÔ∏èüî•üí¨</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Do not violate the community guidelines or you will be banned for life!</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n      <button type=\"submit\" disabled={!formValue}>üïäÔ∏è</button>\n\n    </form>\n  </>)\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n      <p>{text}</p>\n    </div>\n  </>)\n}\n\n\nexport default App2;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport App2 from './App2';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}